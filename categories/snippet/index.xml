<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Snippet on Chip Senkbeil</title><link>https://chipsenkbeil.com/categories/snippet/</link><description>Recent content in Snippet on Chip Senkbeil</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 12 Aug 2016 09:36:18 -0500</lastBuildDate><atom:link href="https://chipsenkbeil.com/categories/snippet/index.xml" rel="self" type="application/rss+xml"/><item><title>Toggle Dvorak</title><link>https://chipsenkbeil.com/notes/toggle-dvorak/</link><pubDate>Fri, 12 Aug 2016 09:36:18 -0500</pubDate><guid>https://chipsenkbeil.com/notes/toggle-dvorak/</guid><description>&lt;p>
In my ArchLinux setup with XMonad, I&amp;#39;ve found myself wanting to swap between
&lt;em>QWERTY&lt;/em> and &lt;em>Dvorak&lt;/em> keyboard layouts when practicing &lt;em>Dvorak&lt;/em>. While my
&lt;em>Kinesis Advantage&lt;/em> keyboard allows me to swap layouts at the hardware level
(I&amp;#39;m assuming by simulating Dvorak on top of Qwerty), I also found a
keyboard-agnostic way to do this.&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Configuring Keypress Toggle
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>
For X11, create the following configuration at
&lt;code class="verbatim">/etc/X11/xorg.conf.d/00-keyboard.conf&lt;/code>:&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Read and parsed by systemd-localed. It&amp;#39;s probably wise not to edit this file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># manually too freely.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Section &lt;span class="s2">&amp;#34;InputClass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Identifier &lt;span class="s2">&amp;#34;system-keyboard&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MatchIsKeyboard &lt;span class="s2">&amp;#34;on&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Option &lt;span class="s2">&amp;#34;XkbLayout&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;us,us&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Option &lt;span class="s2">&amp;#34;XkbModel&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;,&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Option &lt;span class="s2">&amp;#34;XkbVariant&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;,dvorak&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Option &lt;span class="s2">&amp;#34;XkbOptions&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;grp:toggle&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EndSection&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
This enables toggling Dvorak via &lt;code class="verbatim">Right-Alt&lt;/code>.&lt;/p></description></item><item><title>Fix for XMonad with XMobar</title><link>https://chipsenkbeil.com/notes/fix-for-xmonad-with-xmobar/</link><pubDate>Wed, 17 Feb 2016 07:49:30 -0600</pubDate><guid>https://chipsenkbeil.com/notes/fix-for-xmonad-with-xmobar/</guid><description>&lt;p>
When I updated XMonad late last year (2015), I noticed a bug where any
application that I opened on my first workspace would cover XMobar.&lt;/p>
&lt;pre class="example">
E.g. Opening a terminal or Vivaldi took up the entire screen.
&lt;/pre>
&lt;p>
The solution I found was, conveniently, located in a
&lt;a href="https://bbs.archlinux.org/viewtopic.php?id=206890">post on the ArchLinux forum&lt;/a>.&lt;/p>
&lt;p>
Essentially, you just need to add a &lt;code class="verbatim">handleEventHook&lt;/code> with &lt;code class="verbatim">docksEventHook&lt;/code> and
&lt;code class="verbatim">handleEventHook defaultConfig&lt;/code>.&lt;/p>
&lt;div class="src src-haskell">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-haskell" data-lang="haskell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- My overall config that is used elsewhere&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">myConfig&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="n">defaultConfig&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">manageHook&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="n">manageDocks&lt;/span> &lt;span class="o">&amp;lt;+&amp;gt;&lt;/span> &lt;span class="n">manageHook&lt;/span> &lt;span class="n">defaultConfig&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">layoutHook&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="n">avoidStruts&lt;/span> &lt;span class="o">$&lt;/span> &lt;span class="n">layoutHook&lt;/span> &lt;span class="n">defaultConfig&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">handleEventHook&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="n">mconcat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span> &lt;span class="n">docksEventHook&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">handleEventHook&lt;/span> &lt;span class="n">defaultConfig&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">startupHook&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="n">setWMName&lt;/span> &lt;span class="s">&amp;#34;LG3D&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">terminal&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="s">&amp;#34;urxvtcd&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">modMask&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="n">mod1Mask&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">borderWidth&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">focusedBorderColor&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="s">&amp;#34;blue&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div></description></item><item><title>Using blkid to get device information</title><link>https://chipsenkbeil.com/notes/blkid/</link><pubDate>Wed, 07 Mar 2012 12:31:47 -0500</pubDate><guid>https://chipsenkbeil.com/notes/blkid/</guid><description>&lt;p>
Quite often, I find myself needing to remind myself of devices connected to my
computer so that I know what to type for the pmount program, which is really
handy to have! The program [i]blkid[/i] is capable of doing this; however, I
didn&amp;#39;t care for the default output and found myself using this format:&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">blkid -o list -c /dev/null&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;figure>
&lt;img src="https://chipsenkbeil.com/img/post/blkid.jpg" alt="/img/post/blkid.jpg" title="/img/post/blkid.jpg" />&lt;figcaption>
Example of usage
&lt;/figcaption>
&lt;/figure>
&lt;p>
What this does is tell the program to output the information in a user-friendly
list of devices through &amp;#39;-o list&amp;#39; and not report previous devices using &amp;#39;-c
/dev/null.&amp;#39;&lt;/p></description></item></channel></rss>