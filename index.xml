<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chip Senkbeil</title><link>https://chipsenkbeil.com/</link><description>Recent content on Chip Senkbeil</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 09 Sep 2021 00:00:00 -0500</lastBuildDate><atom:link href="https://chipsenkbeil.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Applying GPG and Yubikey: Part 6 (Setting up Yubikeys)</title><link>https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-6-setting-up-yubikeys/</link><pubDate>Thu, 09 Sep 2021 00:00:00 -0500</pubDate><guid>https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-6-setting-up-yubikeys/</guid><description>&lt;p>
As a reminder, you can check out my
&lt;a href="https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-1-overview">overview post&lt;/a> if you&amp;#39;re
curious about why and in what ways I started using GPG and Yubikey. If you
haven&amp;#39;t set up your GPG keys yet, I also talk about a simple flow
&lt;a href="https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-2-setup">in my second post&lt;/a>.&lt;/p>
&lt;p>
Today, we&amp;#39;re diving into setting up your Yubikey to host your GPG subkeys
created in parts &lt;a href="https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-3-encryption">3&lt;/a>,
&lt;a href="https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-4-signing">4&lt;/a>, and
&lt;a href="https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-5-authentication">5&lt;/a>.&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Yubikey
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>
I&amp;#39;ve got multiple Yubikeys configured across different devices and primarily use
them for password management and SSH authentication. Rather than keeping
physical subkeys on each of these machines, I instead have a dedicated Yubikey
for each device that hosts the subkeys, keeping them protected from direct
exposure.&lt;/p></description></item><item><title>Emacs support Magnet</title><link>https://chipsenkbeil.com/notes/emacs-support-magnet/</link><pubDate>Thu, 30 Apr 2020 00:00:00 -0500</pubDate><guid>https://chipsenkbeil.com/notes/emacs-support-magnet/</guid><description>&lt;p>
If you&amp;#39;re using homebrew, you&amp;#39;d normally install the GUI Emacs application via&lt;/p>
&lt;pre class="example">
brew cask install emacs
&lt;/pre>
&lt;p>
The problem is that this installs the standard GNU Emacs leveraging some basic
Cocoa GUI, which results in the &lt;a href="https://magnet.crowdcafe.com/">Magnet&lt;/a>
application not being able to snap Emacs to any of its grids. If you look at the
Magnet dropdown with Emacs focused, all of the options will be greyed out.&lt;/p>
&lt;p>
As described in
&lt;a href="https://www.reddit.com/r/emacs/comments/8ez3a9/macos_window_snapping_with_magnetdoesnt_work_on/">this reddit post&lt;/a>, there is an Emacs distribution designed specifically for Mac OS X
that adds
&lt;a href="https://bitbucket.org/mituharu/emacs-mac/src/f3402395995bf70e50d6e65f841e44d5f9b4603c/README-mac?at=master&amp;amp;fileviewer=file-view-default">additional features&lt;/a> through a Carbon port (over Cocoa from default homebrew).&lt;/p></description></item><item><title>Configuring Calibre Server from CLI</title><link>https://chipsenkbeil.com/notes/configuring-calibre-server-from-cli/</link><pubDate>Sun, 19 Apr 2020 00:00:00 -0500</pubDate><guid>https://chipsenkbeil.com/notes/configuring-calibre-server-from-cli/</guid><description>&lt;p>
Watching&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Installing on a FreeBSD Jail
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>
Very easy to do on FreeBSD 11.3 via the FreeNAS GUI.&lt;/p>
&lt;ol>
&lt;li>Create a new jail and set a specific IPv4 address to host. For me, this was
192.168.5.33&lt;/li>
&lt;li>Enter into a shell within the jail and run &lt;code class="verbatim">pkg install calibre&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>FreeBSD will ask if we want to download and set up the package manager, which we
do. After that, it&amp;#39;ll install a lot of packages (Python 3.7, some Perl, etc.)
and then all CLI commands should be available.&lt;/p></description></item><item><title>Configuring autorandr</title><link>https://chipsenkbeil.com/notes/configuring-autorandr/</link><pubDate>Sun, 15 Dec 2019 00:00:00 -0600</pubDate><guid>https://chipsenkbeil.com/notes/configuring-autorandr/</guid><description>&lt;p>
I have successfully moved over to using super ultrawide monitors both at work
(&lt;a href="https://www.dell.com/en-us/work/shop/accessories/apd/210-arnw">Dell U4919DW&lt;/a>) and at home
(&lt;a href="https://www.samsung.com/us/computing/monitors/gaming/49-crg9-dual-qhd-curved-qled-gaming-monitor-lc49rg90ssnxza/">Samsung CRG90&lt;/a> + &lt;a href="https://www.caldigit.com/ts3-plus/">CalDigit TS3 Plus&lt;/a>). I&amp;#39;ve set
these up as one-cable solutions over USB-C via Alternate Mode (Dell) and/or
Thunderbolt 3 (Samsung + CalDigit), which makes my life much easier.&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Combining with virtual monitors
&lt;/h2>
&lt;/div></description></item><item><title>Applying GPG and Yubikey: Part 5 (Authentication)</title><link>https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-5-authentication/</link><pubDate>Sun, 06 Oct 2019 00:00:00 -0500</pubDate><guid>https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-5-authentication/</guid><description>&lt;p>
As a reminder, you can check out my
&lt;a href="https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-1-overview">overview post&lt;/a> if you&amp;#39;re
curious about why and in what ways I started using GPG and Yubikey. If you
haven&amp;#39;t set up your GPG keys yet, I also talk about a simple flow
&lt;a href="https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-2-setup">in my second post&lt;/a>.&lt;/p>
&lt;p>
Today, we&amp;#39;re going specifically into using GPG for authentication for SSHing
into remote servers and associating with Github.&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Using my GPG key for authenticating over SSH
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>
One handy use case for GPG keys related to authentication is using a GPG key to
access remote servers over SSH. Rather than using password-based authentication
or SSH public key authentication via &lt;code class="verbatim">ssh-keygen&lt;/code>, we can leverage a GPG key
with authentication capabilities to connect instead.&lt;/p></description></item><item><title>Applying GPG and Yubikey: Part 4 (Signing)</title><link>https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-4-signing/</link><pubDate>Mon, 02 Sep 2019 00:00:00 -0500</pubDate><guid>https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-4-signing/</guid><description>&lt;p>
As a reminder, you can check out
&lt;a href="https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-1-overview">overview post&lt;/a> if you&amp;#39;re
curious about why and in what ways I started using GPG and Yubikey. If you
haven&amp;#39;t set up your GPG keys yet, I also talk about a simple flow
&lt;a href="https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-2-setup">in my second post&lt;/a>. Finally,
the email signing section expects you to have already set up encryption, so you
should really check out &lt;a href="https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-3-encryption">my third post&lt;/a> regarding encryption setup with neomutt.&lt;/p>
&lt;p>
Today, we&amp;#39;re going specifically into using GPG for signing email and git
commits.&lt;/p></description></item><item><title>Applying GPG and Yubikey: Part 3 (Encryption)</title><link>https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-3-encryption/</link><pubDate>Sun, 01 Sep 2019 00:00:00 -0500</pubDate><guid>https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-3-encryption/</guid><description>&lt;p>
As a reminder, you can check out
&lt;a href="https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-1-overview">overview post&lt;/a> if you&amp;#39;re
curious about why and in what ways I started using GPG and Yubikey. If you
haven&amp;#39;t set up your GPG keys yet, I also talk about a simple flow
&lt;a href="https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-2-setup">in my second post&lt;/a>.&lt;/p>
&lt;p>
Today, we&amp;#39;re going specifically into using GPG for encryption and how to
integrate GPG into &lt;a href="https://passwordstore.org/">pass&lt;/a> and
&lt;a href="https://neomutt.org/">neomutt&lt;/a>.&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Refresher of current state
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>
At this point, we have our primary key for signing and certifying (SC) other
keys. You should also notice a second key (labelled as a subkey here) that is
purely for encryption (E). We will be using that encryption key for our
utilities today.&lt;/p></description></item><item><title>Applying GPG and Yubikey: Part 2 (Setup GPG Keys)</title><link>https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-2-setup-primary-gpg-key/</link><pubDate>Fri, 16 Aug 2019 00:00:00 -0500</pubDate><guid>https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-2-setup-primary-gpg-key/</guid><description>&lt;p>
If you haven&amp;#39;t read &lt;a href="https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-1-overview">my overview post&lt;/a>, feel free to check it out to get an idea of why and how I
started using GPG and Yubikey.&lt;/p>
&lt;p>
Today we&amp;#39;ll be diving into how to set up a new master GPG key and configure it
for use with the &lt;a href="https://passwordstore.org/">pass&lt;/a> utility. Additionally,
we&amp;#39;ll run through the process to create subkeys with the idea of eventually
storing these on Yubikeys.&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Setting up a primary GPG key
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>
Although I knew I had an old key floating around from previous use, I wanted to
start from scratch. From reading a variety of guides and documentation online, I
knew that I wanted to create a new 4096-bit long RSA key. The time needed
generate such a key on modern hardware is negligible and provides the maximum
protection offered today. Luckily, the GPG interface has improved drastically
since I first used it, so this process - and all of the processes I&amp;#39;ll discuss
later - has been relatively painless.&lt;/p></description></item><item><title>Linux Virtual Monitors with xrandr</title><link>https://chipsenkbeil.com/notes/linux-virtual-monitors-with-xrandr/</link><pubDate>Wed, 14 Aug 2019 00:00:00 -0500</pubDate><guid>https://chipsenkbeil.com/notes/linux-virtual-monitors-with-xrandr/</guid><description>&lt;p>
I recently learned that you can configure virtual monitors with xrandr. There
are two different ways to use this: treat multiple physical monitors as one
giant virtual monitor or treat one physical monitor as multiple virtual
monitors.&lt;/p>
&lt;blockquote>
&lt;p>Note that this requires xrandr 1.5.0 or higher, which introduces setmonitor as
an option in the CLI.&lt;/p>
&lt;/blockquote>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Why do I want to do this?
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>
My primary interest here is to split a super widescreen monitor like the
&lt;a href="https://www.dell.com/en-us/shop/dell-ultrasharp-49-curved-monitor-u4919dw/apd/210-arnw/monitors-monitor-accessories">Dell 49” UltraSharp Curved Monitor (U4919DW)&lt;/a> as multiple separate displays. I like
the way that dwm breaks up monitors into multiple spaces and when I have two or
three separate monitors I normally use a center monitor for focused work with
the side monitors containing music, calendar, and chat.&lt;/p></description></item><item><title>Applying GPG and Yubikey: Part 1 (Overview)</title><link>https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-1-overview/</link><pubDate>Mon, 12 Aug 2019 00:00:00 -0500</pubDate><guid>https://chipsenkbeil.com/posts/applying-gpg-and-yubikey-part-1-overview/</guid><description>&lt;p>
Today is going to be the first in a series of posts I want to write about
applying GPG and YubiKey. I won&amp;#39;t pretend that I am an expert on either GPG or
Yubikey. Instead, I&amp;#39;ll be focusing on how I have been using GPG and a variety of
Yubikey devices to enhance my computer experience.&lt;/p>
&lt;p>
In this post, I&amp;#39;m going to dive into GPG and YubiKey at a high level and explain
what they are to my understanding and how I am using them.&lt;/p></description></item><item><title>Qutebrowser Cheatsheet</title><link>https://chipsenkbeil.com/notes/qutebrowser-cheatsheet/</link><pubDate>Wed, 03 Jul 2019 00:00:00 -0500</pubDate><guid>https://chipsenkbeil.com/notes/qutebrowser-cheatsheet/</guid><description>&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Tabs
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;div id="outline-container-headline-2" class="outline-3">
&lt;h3 id="headline-2">
Navigating Tabs
&lt;/h3>
&lt;div id="outline-text-headline-2" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Combination&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Shift+j&lt;/td>
&lt;td>Go to next tab (to the right), looping around to first tab if at the end&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Shift+k&lt;/td>
&lt;td>Go to previous tab (to the left), looping around to last tab if at the beginning&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>gt&lt;/td>
&lt;td>Open list of tabs to fuzzy search and jump to specified tab&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>+Shift+t&lt;/td>
&lt;td>Go to tab at N&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
Moving Tabs
&lt;/h3>
&lt;div id="outline-text-headline-3" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Combination&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>gD&lt;/td>
&lt;td>Move current tab to new window&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-3">
&lt;h3 id="headline-4">
Deleting Tabs
&lt;/h3>
&lt;div id="outline-text-headline-4" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Combination&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>d&lt;/td>
&lt;td>Close current tab&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>co&lt;/td>
&lt;td>Close all tabs but current tab&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-5" class="outline-2">
&lt;h2 id="headline-5">
Element Selection
&lt;/h2>
&lt;div id="outline-text-headline-5" class="outline-text-2">
&lt;div id="outline-container-headline-6" class="outline-3">
&lt;h3 id="headline-6">
Select Input
&lt;/h3>
&lt;div id="outline-text-headline-6" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Combination&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>gi&lt;/td>
&lt;td>Go to primary input textbox (not sure how it decides)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>;t&lt;/td>
&lt;td>Provide hints for selecting an input textbox&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-7" class="outline-3">
&lt;h3 id="headline-7">
Select Hyperlink on Page
&lt;/h3>
&lt;div id="outline-text-headline-7" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Combination&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>f&lt;/td>
&lt;td>Provide hints for selecting a hyperlink (to open in current tab)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Shift+f&lt;/td>
&lt;td>Provide hints for selecting a hyperlink (to open in new tab)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-8" class="outline-2">
&lt;h2 id="headline-8">
URLs
&lt;/h2>
&lt;div id="outline-text-headline-8" class="outline-text-2">
&lt;div id="outline-container-headline-9" class="outline-3">
&lt;h3 id="headline-9">
Open URL
&lt;/h3>
&lt;div id="outline-text-headline-9" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Combination&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>o&lt;/td>
&lt;td>Open list of history/quickmarks as well as be able to provide own link to go to in current tab&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Shift+o&lt;/td>
&lt;td>Open list of history/quickmarks as well as be able to provide own link to go to in new tab&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-10" class="outline-2">
&lt;h2 id="headline-10">
Pages
&lt;/h2>
&lt;div id="outline-text-headline-10" class="outline-text-2">
&lt;div id="outline-container-headline-11" class="outline-3">
&lt;h3 id="headline-11">
Page Navigation
&lt;/h3>
&lt;div id="outline-text-headline-11" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Combination&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>gg&lt;/td>
&lt;td>Jump to top of page&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Shift+g&lt;/td>
&lt;td>Jump to bottom of page&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>[N]+j&lt;/td>
&lt;td>Move down 1 line in page, or N lines if specified&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>[N]+k&lt;/td>
&lt;td>Move up 1 line in page, or N lines if specified&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-12" class="outline-3">
&lt;h3 id="headline-12">
Page History
&lt;/h3>
&lt;div id="outline-text-headline-12" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Combination&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Shift+h&lt;/td>
&lt;td>Go back in history of current tab&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Shift+l&lt;/td>
&lt;td>Go forward in history of current tab&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-13" class="outline-3">
&lt;h3 id="headline-13">
Page Search
&lt;/h3>
&lt;div id="outline-text-headline-13" class="outline-text-3">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key Combination&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>/&lt;/td>
&lt;td>Search for text in current tab&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>n&lt;/td>
&lt;td>Move forward in search in current tab&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Shift+n&lt;/td>
&lt;td>Move backward in search in current tab&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>Raspbian Static IP</title><link>https://chipsenkbeil.com/notes/raspbian-static-ip/</link><pubDate>Sat, 22 Jun 2019 00:00:00 -0500</pubDate><guid>https://chipsenkbeil.com/notes/raspbian-static-ip/</guid><description>&lt;p>
The main changes need to occur in &lt;code class="verbatim">/etc/dhcpcd.conf&lt;/code>.&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-4">
&lt;h4 id="headline-1">
Find Interface Name
&lt;/h4>
&lt;div id="outline-text-headline-1" class="outline-text-4">
&lt;p>Before editing that file, we need to look up our ethernet interface name. This
used to be something easy like &lt;strong>eth0&lt;/strong>, but Debian appears to have
&lt;a href="https://wiki.debian.org/NetworkConfiguration#Predictable_Network_Interface_Names">changed interface names&lt;/a>. Run &lt;code class="verbatim">ifconfig&lt;/code> to see Debian&amp;#39;s current interfaces. With the
Raspberry Pi 3 B+, there will also be a wifi interface shown as below:&lt;/p>
&lt;pre class="example">
enxb827ebb61344: flags=4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt; mtu 1500
 ether b8:27:eb:b6:13:44 txqueuelen 1000 (Ethernet)
 RX packets 24867 bytes 5952214 (5.6 MiB)
 RX errors 1 dropped 350 overruns 0 frame 0
 TX packets 2884 bytes 222449 (217.2 KiB)
 TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0

lo: flags=73&amp;lt;UP,LOOPBACK,RUNNING&amp;gt; mtu 65536
 inet 127.0.0.1 netmask 255.0.0.0
 inet6 ::1 prefixlen 128 scopeid 0x10&amp;lt;host&amp;gt;
 loop txqueuelen 1000 (Local Loopback)
 RX packets 0 bytes 0 (0.0 B)
 RX errors 0 dropped 0 overruns 0 frame 0
 TX packets 0 bytes 0 (0.0 B)
 TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0

wlan0: flags=4099&amp;lt;UP,BROADCAST,MULTICAST&amp;gt; mtu 1500
 ether b8:27:eb:e3:46:11 txqueuelen 1000 (Ethernet)
 RX packets 0 bytes 0 (0.0 B)
 RX errors 0 dropped 0 overruns 0 frame 0
 TX packets 0 bytes 0 (0.0 B)
 TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0
&lt;/pre>
&lt;p>
Notice &lt;strong>enxb827ebb61344&lt;/strong>, the ridiculously ugly interface name that we&amp;#39;ll need
when setting our static IP.&lt;/p></description></item><item><title>Finding My Balance</title><link>https://chipsenkbeil.com/posts/finding-my-balance/</link><pubDate>Fri, 22 Mar 2019 00:00:00 -0500</pubDate><guid>https://chipsenkbeil.com/posts/finding-my-balance/</guid><description>&lt;p>
Writing blog posts is hard, at least for me. What is a good topic to discuss?
When can I find the time to write the content? How can I stay focused long
enough to finish a post? How do I understand if the post was a hit?&lt;/p>
&lt;p>
Interestingly enough, the challenges posed by those questions share similarities
with those that I&amp;#39;ve faced as a Solutions Engineer, and it&amp;#39;s these challenges
and how I&amp;#39;ve approached tackling them that I want to discuss now.&lt;/p></description></item><item><title>Breaking Down the Zsh Notes Function</title><link>https://chipsenkbeil.com/posts/breaking-down-the-zsh-notes-function/</link><pubDate>Sun, 08 Jul 2018 00:00:00 -0500</pubDate><guid>https://chipsenkbeil.com/posts/breaking-down-the-zsh-notes-function/</guid><description>&lt;p>
Earlier, I discussed my need to have method to jot down notes quickly and
comfortably on a computer. I wanted the setup to be as painless as possible
while also giving me the flexibility I desired to extend the note-taking method.&lt;/p>
&lt;p>
Being a lightweight user of zsh - not leveraging many plugins or additional
functionality - I decided to explore writing a zsh function to be exposed in my
shell. This function&amp;#39;s goal was to manage my notes, providing functionality to
list existing notes, create new notes, and delete old notes. At the end of the
day, I arrived at a 122 line zsh function as seen
&lt;a href="https://chipsenkbeil.com/posts/breaking-down-the-zsh-notes-function/#source-code">at the bottom of this post&lt;/a>.&lt;/p></description></item><item><title>Reducing the Barrier to Entry in Note Taking</title><link>https://chipsenkbeil.com/posts/reducing-the-barrier-to-entry-in-note-taking/</link><pubDate>Sun, 01 Jul 2018 00:00:00 -0500</pubDate><guid>https://chipsenkbeil.com/posts/reducing-the-barrier-to-entry-in-note-taking/</guid><description>&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
The Challenge
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>
One of my biggest challenges to accomplishing something is the barrier to entry.
Starting a project, exercising, and even writing this blog post take genuine
effort for me to do. After realizing this as one of my biggest obstacles to
getting things done, I&amp;#39;ve dedicated quite a few cycles of my time toward
figuring out ways to reduce the initial friction. For the case of taking notes,
this involved both providing a quick way to get started as well as a comfortable
environment to write notes.&lt;/p></description></item><item><title>Proxmox Changes</title><link>https://chipsenkbeil.com/notes/proxmox-changes/</link><pubDate>Sun, 14 Jan 2018 00:00:00 -0600</pubDate><guid>https://chipsenkbeil.com/notes/proxmox-changes/</guid><description>&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Removing subscription notice
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">sed -i.bak &lt;span class="s1">&amp;#39;s/NotFound/Active/g&amp;#39;&lt;/span> /usr/share/perl5/PVE/API2/Subscription.pm &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> systemctl restart pveproxy.service&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-2" class="outline-2">
&lt;h2 id="headline-2">
Generating Let&amp;#39;s Encrypt certs
&lt;/h2>
&lt;div id="outline-text-headline-2" class="outline-text-2">
&lt;p>
https://pve.proxmox.com/wiki/HTTPS_Certificate_Configuration_(Version_4.x_and_newer)#Let.27s_Encrypt_using_acme.sh&lt;/p>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-3" class="outline-2">
&lt;h2 id="headline-3">
Supporting port 80 &amp;amp; 443
&lt;/h2>
&lt;div id="outline-text-headline-3" class="outline-text-2">
&lt;p>
By default, proxmox looks for traffic only on port 8006. Based on my readings
online, forcefully changing the port - which is now hardcoded - can cause a lot
of problems. Instead, the most recent and successful recommendation has been to
use &lt;em>nginx&lt;/em> to redirect traffic on port 80 and 443 to port 8006. Below is the
configuration created at &lt;code class="verbatim">/etc/nginx/conf.d/proxmox.conf&lt;/code> after clearing the
files &lt;code class="verbatim">/etc/nginx/conf.d/default&lt;/code> and &lt;code class="verbatim">/etc/nginx/site-enabled/default&lt;/code>.&lt;/p></description></item><item><title>Search Github</title><link>https://chipsenkbeil.com/notes/search-github/</link><pubDate>Mon, 13 Mar 2017 20:51:09 -0500</pubDate><guid>https://chipsenkbeil.com/notes/search-github/</guid><description>&lt;p>
Couple of notes about searching on Github that have proven to be quite useful:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>You can include/exclude specific files using the &lt;code class="verbatim">filename&lt;/code> property in a
search.&lt;/p>
&lt;p>
The following searches for content &lt;em>&amp;#34;some content&amp;#34;&lt;/em> only in &lt;code class="verbatim">.config&lt;/code> files.&lt;/p>
&lt;pre class="example">
some content filename:.config
&lt;/pre>
&lt;p>
The following searches for content &lt;em>&amp;#34;some content&amp;#34;&lt;/em> in all files but
&lt;code class="verbatim">.config&lt;/code> files.&lt;/p>
&lt;pre class="example">
some content -filename:.config
&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>You can include/exclude specific users and organizations in a search. This is
handy when I&amp;#39;m trying to judge how much use a library of mine is getting in
the open source community while avoiding my own projects.&lt;/p></description></item><item><title>Toggle Dvorak</title><link>https://chipsenkbeil.com/notes/toggle-dvorak/</link><pubDate>Fri, 12 Aug 2016 09:36:18 -0500</pubDate><guid>https://chipsenkbeil.com/notes/toggle-dvorak/</guid><description>&lt;p>
In my ArchLinux setup with XMonad, I&amp;#39;ve found myself wanting to swap between
&lt;em>QWERTY&lt;/em> and &lt;em>Dvorak&lt;/em> keyboard layouts when practicing &lt;em>Dvorak&lt;/em>. While my
&lt;em>Kinesis Advantage&lt;/em> keyboard allows me to swap layouts at the hardware level
(I&amp;#39;m assuming by simulating Dvorak on top of Qwerty), I also found a
keyboard-agnostic way to do this.&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Configuring Keypress Toggle
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>
For X11, create the following configuration at
&lt;code class="verbatim">/etc/X11/xorg.conf.d/00-keyboard.conf&lt;/code>:&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Read and parsed by systemd-localed. It&amp;#39;s probably wise not to edit this file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># manually too freely.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Section &lt;span class="s2">&amp;#34;InputClass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Identifier &lt;span class="s2">&amp;#34;system-keyboard&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MatchIsKeyboard &lt;span class="s2">&amp;#34;on&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Option &lt;span class="s2">&amp;#34;XkbLayout&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;us,us&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Option &lt;span class="s2">&amp;#34;XkbModel&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;,&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Option &lt;span class="s2">&amp;#34;XkbVariant&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;,dvorak&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Option &lt;span class="s2">&amp;#34;XkbOptions&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;grp:toggle&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EndSection&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
This enables toggling Dvorak via &lt;code class="verbatim">Right-Alt&lt;/code>.&lt;/p></description></item><item><title>Fix for XMonad with XMobar</title><link>https://chipsenkbeil.com/notes/fix-for-xmonad-with-xmobar/</link><pubDate>Wed, 17 Feb 2016 07:49:30 -0600</pubDate><guid>https://chipsenkbeil.com/notes/fix-for-xmonad-with-xmobar/</guid><description>&lt;p>
When I updated XMonad late last year (2015), I noticed a bug where any
application that I opened on my first workspace would cover XMobar.&lt;/p>
&lt;pre class="example">
E.g. Opening a terminal or Vivaldi took up the entire screen.
&lt;/pre>
&lt;p>
The solution I found was, conveniently, located in a
&lt;a href="https://bbs.archlinux.org/viewtopic.php?id=206890">post on the ArchLinux forum&lt;/a>.&lt;/p>
&lt;p>
Essentially, you just need to add a &lt;code class="verbatim">handleEventHook&lt;/code> with &lt;code class="verbatim">docksEventHook&lt;/code> and
&lt;code class="verbatim">handleEventHook defaultConfig&lt;/code>.&lt;/p>
&lt;div class="src src-haskell">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-haskell" data-lang="haskell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- My overall config that is used elsewhere&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">myConfig&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="n">defaultConfig&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span> &lt;span class="n">manageHook&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="n">manageDocks&lt;/span> &lt;span class="o">&amp;lt;+&amp;gt;&lt;/span> &lt;span class="n">manageHook&lt;/span> &lt;span class="n">defaultConfig&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">layoutHook&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="n">avoidStruts&lt;/span> &lt;span class="o">$&lt;/span> &lt;span class="n">layoutHook&lt;/span> &lt;span class="n">defaultConfig&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">handleEventHook&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="n">mconcat&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">[&lt;/span> &lt;span class="n">docksEventHook&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">handleEventHook&lt;/span> &lt;span class="n">defaultConfig&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">startupHook&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="n">setWMName&lt;/span> &lt;span class="s">&amp;#34;LG3D&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">terminal&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="s">&amp;#34;urxvtcd&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">modMask&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="n">mod1Mask&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">borderWidth&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">,&lt;/span> &lt;span class="n">focusedBorderColor&lt;/span> &lt;span class="ow">=&lt;/span> &lt;span class="s">&amp;#34;blue&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div></description></item><item><title>CSS Masonry Layout Attempts</title><link>https://chipsenkbeil.com/posts/css-masonry-layout-attempts/</link><pubDate>Wed, 02 Sep 2015 00:00:00 -0500</pubDate><guid>https://chipsenkbeil.com/posts/css-masonry-layout-attempts/</guid><description>&lt;p>
I spent two days investigating this and could not find a solution that worked.
Eventually, I gave up and added the Masonry Javascript library. My two attempts
were as follows:&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
Using CSS Columns
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>
CSS Columns enabled an easy, powerful way to spread page summaries across
multiple columns. Furthermore, you can prevent page summaries from being broken
up in the middle by using &lt;code class="verbatim">column-break-inside: avoid;&lt;/code>. However, I had no way
to order the page summaries dynamically such that the most recent summaries were
at the top (from left to right) and older summaries were found further down.
Instead, this resulted in the latest summary starting in the top left with older
summaries going down the first column and into the second, etc.&lt;/p></description></item><item><title>tmux with XMonad Bindings</title><link>https://chipsenkbeil.com/posts/tmux-with-xmonad-bindings/</link><pubDate>Tue, 24 Dec 2013 00:00:00 -0600</pubDate><guid>https://chipsenkbeil.com/posts/tmux-with-xmonad-bindings/</guid><description>&lt;div id="outline-container-headline-1" class="outline-2">
&lt;h2 id="headline-1">
The Reason
&lt;/h2>
&lt;div id="outline-text-headline-1" class="outline-text-2">
&lt;p>
I&amp;#39;ve been playing around with &lt;code class="verbatim">tmux&lt;/code> a lot lately and have come to like it quite
a lot for the panes and windows - something I used quite a lot with my XMonad
setup on my old Fujitsu laptop. The panes act as my individual terminals with
which I can write code, read documentation, chat on IRC (using &lt;code class="verbatim">weechat&lt;/code> or
&lt;code class="verbatim">irssi&lt;/code>), play music, etc. In other words, I do quite a lot from within
terminals and being able to split up a terminal into panes (like XMonad
launching tiled terminals) is quite nice. Furthermore, treating the windows as
my workspaces lets me quickly organize myself just like with XMonad.&lt;/p></description></item><item><title>Using blkid to get device information</title><link>https://chipsenkbeil.com/notes/blkid/</link><pubDate>Wed, 07 Mar 2012 12:31:47 -0500</pubDate><guid>https://chipsenkbeil.com/notes/blkid/</guid><description>&lt;p>
Quite often, I find myself needing to remind myself of devices connected to my
computer so that I know what to type for the pmount program, which is really
handy to have! The program [i]blkid[/i] is capable of doing this; however, I
didn&amp;#39;t care for the default output and found myself using this format:&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">blkid -o list -c /dev/null&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;figure>
&lt;img src="https://chipsenkbeil.com/img/post/blkid.jpg" alt="/img/post/blkid.jpg" title="/img/post/blkid.jpg" />&lt;figcaption>
Example of usage
&lt;/figcaption>
&lt;/figure>
&lt;p>
What this does is tell the program to output the information in a user-friendly
list of devices through &amp;#39;-o list&amp;#39; and not report previous devices using &amp;#39;-c
/dev/null.&amp;#39;&lt;/p></description></item><item><title>About</title><link>https://chipsenkbeil.com/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chipsenkbeil.com/about/</guid><description>&lt;p>
Presently employed as a &lt;em>Solutions Engineer&lt;/em> at Facebook.&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
Employment History
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;ul>
&lt;li>Solutions Engineer; Facebook; 2017 - present&lt;/li>
&lt;li>Software Engineer; IBM; 2014 - 2017&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-2" class="outline-3">
&lt;h3 id="headline-2">
Public Projects
&lt;/h3>
&lt;div id="outline-text-headline-2" class="outline-text-3">
&lt;ul>
&lt;li>remote.nvim; Remote File Editor; vimscript/python &lt;a href="https://github.com/chipsenkbeil/remote.nvim">LINK&lt;/a>&lt;/li>
&lt;li>Grus; Static Site Generator; Scala &lt;a href="https://github.com/chipsenkbeil/grus">LINK&lt;/a>&lt;/li>
&lt;li>Scala Debugger; Scala Tooling; Scala &lt;a href="https://scala-debugger.org/">LINK&lt;/a>&lt;/li>
&lt;li>Grid Side; Hugo Theme; JavaScript/CSS/HTML &lt;a href="https://github.com/chipsenkbeil/grid-side">LINK&lt;/a>&lt;/li>
&lt;li>Apache Toree; Scala/R/Python Spark Kernel; Scala &lt;a href="https://toree.incubator.apache.org">LINK&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-3" class="outline-3">
&lt;h3 id="headline-3">
Public Talks
&lt;/h3>
&lt;div id="outline-text-headline-3" class="outline-text-3">
&lt;ul>
&lt;li>Debugging in Scala; ScalaSphere, 2017; Krakow, Poland &lt;a href="https://www.youtube.com/watch?v=LgMvaHEWeu8">LINK&lt;/a>&lt;/li>
&lt;li>Spark Kernel; Spark Meetup Bay Area, 2015; San Francisco, California &lt;a href="https://www.youtube.com/watch?v=2AX6g0tK-us">LINK&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-4" class="outline-3">
&lt;h3 id="headline-4">
Public Papers
&lt;/h3>
&lt;div id="outline-text-headline-4" class="outline-text-3">
&lt;ul>
&lt;li>UAV Collision Avoidance Using Artificial Potential Fields (2014) &lt;a href="http://arc.aiaa.org/doi/abs/10.2514/1.I010022">LINK&lt;/a>&lt;/li>
&lt;li>Running students&amp;#39; software tests against each others&amp;#39; code: new life for an old &amp;#34;gimmick&amp;#34; (2012) &lt;a href="http://dl.acm.org/citation.cfm?id=2157202">LINK&lt;/a>&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-5" class="outline-3">
&lt;h3 id="headline-5">
Education
&lt;/h3>
&lt;div id="outline-text-headline-5" class="outline-text-3">
&lt;ul>
&lt;li>M.S. in Computer Science from Georgia Tech; 2016 - 2019&lt;/li>
&lt;li>B.S. in Computer Engineering from Virginia Tech; 2009 - 2013&lt;/li>
&lt;li>B.S. in Computer Science from Virginia Tech; 2009 - 2013&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div></description></item><item><title>Miscellaneous</title><link>https://chipsenkbeil.com/miscellaneous/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chipsenkbeil.com/miscellaneous/</guid><description>&lt;div id="outline-container-headline-1" class="outline-3">
&lt;h3 id="headline-1">
Current Books
&lt;/h3>
&lt;div id="outline-text-headline-1" class="outline-text-3">
&lt;ul>
&lt;li>&lt;em>Managing Humans: Biting and Humorous Tales of a Software Engineering Manager&lt;/em> by Michael Lopp (3rd edition)&lt;/li>
&lt;li>&lt;em>The 7 Habits of Highly Effective People: Powerful Lessons in Personal Change&lt;/em> by Stephen R. Covey (25th Anniversary Edition)&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;div id="outline-container-headline-2" class="outline-3">
&lt;h3 id="headline-2">
Handy Links
&lt;/h3>
&lt;div id="outline-text-headline-2" class="outline-text-3">
&lt;ul>
&lt;li>
&lt;p>&lt;a href="http://unixetc.co.uk/2016/01/07/how-to-rename-the-default-raspberry-pi-user/">How to rename the default raspberry pi user&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Handles to Raspbian 2019 challenges and ensures all relevant groups are kept in tact as well&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div></description></item></channel></rss>