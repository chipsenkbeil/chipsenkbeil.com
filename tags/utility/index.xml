<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Utility on Chip Senkbeil</title><link>https://chipsenkbeil.com/tags/utility/</link><description>Recent content in Utility on Chip Senkbeil</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 13 Mar 2017 20:51:09 -0500</lastBuildDate><atom:link href="https://chipsenkbeil.com/tags/utility/index.xml" rel="self" type="application/rss+xml"/><item><title>Search Github</title><link>https://chipsenkbeil.com/notes/search-github/</link><pubDate>Mon, 13 Mar 2017 20:51:09 -0500</pubDate><guid>https://chipsenkbeil.com/notes/search-github/</guid><description>&lt;p>
Couple of notes about searching on Github that have proven to be quite useful:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>You can include/exclude specific files using the &lt;code class="verbatim">filename&lt;/code> property in a
search.&lt;/p>
&lt;p>
The following searches for content &lt;em>&amp;#34;some content&amp;#34;&lt;/em> only in &lt;code class="verbatim">.config&lt;/code> files.&lt;/p>
&lt;pre class="example">
some content filename:.config
&lt;/pre>
&lt;p>
The following searches for content &lt;em>&amp;#34;some content&amp;#34;&lt;/em> in all files but
&lt;code class="verbatim">.config&lt;/code> files.&lt;/p>
&lt;pre class="example">
some content -filename:.config
&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>You can include/exclude specific users and organizations in a search. This is
handy when I&amp;#39;m trying to judge how much use a library of mine is getting in
the open source community while avoiding my own projects.&lt;/p></description></item><item><title>Toggle Dvorak</title><link>https://chipsenkbeil.com/notes/toggle-dvorak/</link><pubDate>Fri, 12 Aug 2016 09:36:18 -0500</pubDate><guid>https://chipsenkbeil.com/notes/toggle-dvorak/</guid><description>&lt;p>
In my ArchLinux setup with XMonad, I&amp;#39;ve found myself wanting to swap between
&lt;em>QWERTY&lt;/em> and &lt;em>Dvorak&lt;/em> keyboard layouts when practicing &lt;em>Dvorak&lt;/em>. While my
&lt;em>Kinesis Advantage&lt;/em> keyboard allows me to swap layouts at the hardware level
(I&amp;#39;m assuming by simulating Dvorak on top of Qwerty), I also found a
keyboard-agnostic way to do this.&lt;/p>
&lt;div id="outline-container-headline-1" class="outline-4">
&lt;h4 id="headline-1">
Configuring Keypress Toggle
&lt;/h4>
&lt;div id="outline-text-headline-1" class="outline-text-4">
&lt;p>For X11, create the following configuration at
&lt;code class="verbatim">/etc/X11/xorg.conf.d/00-keyboard.conf&lt;/code>:&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Read and parsed by systemd-localed. It&amp;#39;s probably wise not to edit this file&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># manually too freely.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Section &lt;span class="s2">&amp;#34;InputClass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Identifier &lt;span class="s2">&amp;#34;system-keyboard&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> MatchIsKeyboard &lt;span class="s2">&amp;#34;on&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Option &lt;span class="s2">&amp;#34;XkbLayout&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;us,us&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Option &lt;span class="s2">&amp;#34;XkbModel&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;,&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Option &lt;span class="s2">&amp;#34;XkbVariant&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;,dvorak&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Option &lt;span class="s2">&amp;#34;XkbOptions&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;grp:toggle&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">EndSection&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>
This enables toggling Dvorak via &lt;code class="verbatim">Right-Alt&lt;/code>.&lt;/p></description></item><item><title>Using blkid to get device information</title><link>https://chipsenkbeil.com/notes/blkid/</link><pubDate>Wed, 07 Mar 2012 12:31:47 -0500</pubDate><guid>https://chipsenkbeil.com/notes/blkid/</guid><description>&lt;p>
Quite often, I find myself needing to remind myself of devices connected to my
computer so that I know what to type for the pmount program, which is really
handy to have! The program [i]blkid[/i] is capable of doing this; however, I
didn&amp;#39;t care for the default output and found myself using this format:&lt;/p>
&lt;div class="src src-sh">
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">blkid -o list -c /dev/null&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;figure>
&lt;img src="https://chipsenkbeil.com/img/post/blkid.jpg" alt="/img/post/blkid.jpg" title="/img/post/blkid.jpg" />&lt;figcaption>
Example of usage
&lt;/figcaption>
&lt;/figure>
&lt;p>
What this does is tell the program to output the information in a user-friendly
list of devices through &amp;#39;-o list&amp;#39; and not report previous devices using &amp;#39;-c
/dev/null.&amp;#39;&lt;/p></description></item></channel></rss>